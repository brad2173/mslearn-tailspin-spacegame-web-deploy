trigger:
- '*'

variables:
  buildConfiguration: 'Release'
  releaseBranchName: 'release'

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool: 
      name: 'linux_pool'
      demands:
        Agent.Version -equals 3.220.5

      
    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '6.x'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'

    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'

    - task: gulp@1
      displayName: 'Run gulp tasks'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

- stage: 'Dev'
  displayName: 'Deploy to Web Server'
  dependsOn: Build
  condition:  succeeded()
  jobs:
  - job: 'DeployNodeA'
    pool:
      vmImage: 'ubuntu-20.04'
    variables:
    - group: Release
    strategy:
      parallel:
    steps:
    - download: current
      artifact: drop
    - task: AzureWebApp@1
      displayName: 'Azure App Service Deploy: website'
      inputs:
        azureSubscription: 'Visual Studio Professional Subscription(8e300b07-d799-447d-9dec-b3ba49a80390)'
        appType: 'webAppLinux'
        appName: '$(WebAppNameDev)'
        package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
  - job: 'DeployNodeB'
    pool:
      vmImage: 'ubuntu-20.04'
    variables:
    - group: Release
    strategy:
      parallel:
    steps:
    - download: current
      artifact: drop
    - task: AzureWebApp@1
      displayName: 'Azure App Service Deploy: website'
      inputs:
        azureSubscription: 'Visual Studio Professional Subscription(8e300b07-d799-447d-9dec-b3ba49a80390)'
        appType: 'webAppLinux'
        appName: '$(WebAppNameDev)'
        package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
